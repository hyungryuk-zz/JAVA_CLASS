<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- component sacnning 설정 -->
	<context:component-scan base-package="myspring.user">
		<context:exclude-filter type="annotation" 
			expression="org.springframework.stereotype.Controller"/> <!-- Controller쪽에서는 실행하지 않겠다 -->
	</context:component-scan>


	<!--  properties file 정보 설정 -->
	<context:property-placeholder location="classpath:config/values.properties"/>

	<!-- SqlSessionFactoryBean 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/sqlMapConfig.xml"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:config/usersMapper.xml</value>
				<value>classpath:config/EMpDeptMap.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- SqlSessionTemplate 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>	
	</bean>
	
	

	<!--  DataSource 구현체를 Bean으로 등록 -->
<!-- 	<bean id="dataSource"  -->
<!-- 	class="org.springframework.jdbc.datasource.SimpleDriverDataSource" -->
<!-- 		p:driverClass="oracle.jdbc.OracleDriver" -->
<!-- 		p:url="jdbc:oracle:thin:@localhost:1521:xe" -->
<!-- 		p:username="scott" -->
<!-- 		p:password="tiger" -->
<!-- 	/> -->

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		p:driverClassName="${db.driver}"
		p:url="${db.url}"
		p:username="${db.username}"
		p:password="${db.password}"
	/>
		
	<!--  StringPrinter 클래스를 bean으로 등록 -->
	<bean id="printer" class="myspring.di.xml.StringPrint" />
	
	<!-- ConsolePrinter 클래스를 bean으로 등록 -->
	<bean id="cPrinter" class="myspring.di.xml.ConsolePrinter" />
	
	<!--  Hello 클래스를 bean으로 등록, Setter를 이용한 의존관계 설정 -->
	<bean id="hello" class="myspring.di.xml.Hello">
		<property name="name" value="${myName}" />
		<property name="printer" ref="printer" />
		<property name="names">
			<list>
				<value>${value1}</value>
				<value>${value2}</value>
				<value>${value3}</value>
				<value>${value4}</value>
			</list>
		</property>
		<property name="namesSet">
			<set>
				<value>자바</value>
				<value>파이썬</value>
				<value>스칼라</value>
				<value>자바</value>

				
			</set>
		</property>
	</bean>
	
	<bean id="hello2" class="myspring.di.xml.Hello">
		<property name="name" value="길동아" />
		<property name="printer" ref="cPrinter" />
	</bean>
	
	<!--  constructor injection -->
	<bean id="helloC" class="myspring.di.xml.Hello">
		<constructor-arg index="0" value="생성자"/>
		<constructor-arg index="1" ref="printer"/>		
	</bean>
		
</beans>
