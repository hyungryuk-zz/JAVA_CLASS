package workshop.broker.controller;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.Servlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import workshop.broker.dao.Database;
import workshop.broker.exception.DuplicateIDException;
import workshop.broker.exception.RecordNotFoundException;
import workshop.broker.vo.CustomerRec;

/**
 * Servlet implementation class BrokerServlet
 */
@WebServlet("/broker")
public class BrokerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private Database dao;
	/**
	 * @see Servlet#init(ServletConfig)
	 */
	public void init(ServletConfig config) throws ServletException {
		
		try {
			dao = new Database();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	/**
	 * @see Servlet#destroy()
	 */
	public void destroy() {
		if(dao!=null)
			dao.close();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		processRequest(request,response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		processRequest(request,response);
	}
    private void processRequest(HttpServletRequest request, HttpServletResponse response) {
	      // getAllCustomers() 호출
	      // 1. getAllCustomers() 메서트 호출
	      // 2. request scope 에 저장
	      // 3. 결과 페이지로 포워딩
    	try {
			request.setCharacterEncoding("UTF-8");
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	      String resultPageName = "";
	      try {
	         String cmd = request.getParameter("cmd");
	         if(cmd.equals("allCustomer")) {
	            resultPageName = getAllCustomer(request);
	          	RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  resultPageName);
	        	 dispatcher.forward(request, response);
	         }else if(cmd.equals("oneCustomer")) {
	        	 resultPageName = getCustomer(request,request.getParameter("ssn"));	//각 ssn에 맞게 setAttribute를 하기 위해서 메소드로 지정
	        	 RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  resultPageName);
	        	 dispatcher.forward(request, response);
	         }else if(cmd.equals("registform")) {
	        	 RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  "resCustomer.jsp");
	        	 dispatcher.forward(request, response);
	         }else if(cmd.equals("resCustommer")) {      
	        	 resultPageName = addCustomer(request);
	        	 RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  resultPageName);
	        	 dispatcher.forward(request, response);
	         }else if(cmd.equals("delCustomer")) {
	        	 resultPageName = delCustomer(request);
	        	 RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  resultPageName);
	        	 dispatcher.forward(request, response);
	         }else if(cmd.equals("editCustomer")) {
	        	 resultPageName = editCustomer(request,request.getParameter("ssn"));
	        	 RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  resultPageName);
	        	 dispatcher.forward(request, response);
	         }else if(cmd.equals("editCusData")) {
	        	 resultPageName = editCusData(request);
	        	 RequestDispatcher dispatcher = request.getRequestDispatcher("/broker/" +  resultPageName);
	        	 dispatcher.forward(request, response);
	         }
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	   }
	   
    private String editCusData(HttpServletRequest request) {
    	CustomerRec cus = new CustomerRec(request.getParameter("ssn"),request.getParameter("name"),request.getParameter("addr"));
    	try {
			dao.updateCustomer(cus);
		} catch (RecordNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return getAllCustomer(request);
    }
    private String editCustomer(HttpServletRequest request, String ssn) {
    	 List<CustomerRec> customerList = null;
	      customerList = dao.getAllCustomers();
	      request.setAttribute("customerList", customerList);
	      try {
			CustomerRec cus = dao.getCustomer(ssn);
			request.setAttribute("cus", cus);
		} catch (RecordNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}    	  
	 	return "editCustomer.jsp";
    }
    private String delCustomer(HttpServletRequest request) {
    	try {
			dao.deleteCustomer(request.getParameter("ssn"));
		} catch (RecordNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return getAllCustomer(request);
    	
    }
    private String addCustomer(HttpServletRequest request) {
    	CustomerRec cus = new CustomerRec(request.getParameter("ssn"),request.getParameter("name"),request.getParameter("addr"));
    	try {
			dao.addCustomer(cus);
		} catch (DuplicateIDException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	return getAllCustomer(request);
    }
    
    private String getCustomer(HttpServletRequest request, String ssn) throws RecordNotFoundException {
		// TODO Auto-generated method stub
		CustomerRec customer = dao.getCustomer(ssn);
		request.setAttribute("customer",customer);
		
    	return "customerDetail.jsp";
		
	}

	
    
    //전체 목록 조회
	   public String getAllCustomer(HttpServletRequest request) {
	      List<CustomerRec> customerList = null;
	      customerList = dao.getAllCustomers();
	      request.setAttribute("customerList", customerList);
	      return "customerList.jsp";
	   }

}
