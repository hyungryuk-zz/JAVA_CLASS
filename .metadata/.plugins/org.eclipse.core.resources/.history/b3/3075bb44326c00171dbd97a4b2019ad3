package lambdasinaction._01lambda.basic2;

import java.util.*;
import java.util.function.Predicate;

public class FilteringApples{

    public static void main(String ... args){

        List<Apple> inventory = Arrays.asList(new Apple(80,"green"),
                                              new Apple(155, "green"),
                                              new Apple(120, "red"));	

        
        
//        // Method Reference 사용 [Apple{color='green', weight=80}, Apple{color='green', weight=155}]
//        List<Apple>greenApple = filterApples(inventory,FilteringApples::isGreenApple);
//        System.out.println(greenApple);
//        
//        // Method Reference 사용 [Apple{color='green', weight=155}]
//        List<Apple>heavyApple = filterApples(inventory,FilteringApples::isHeavyApple);
//        System.out.println(heavyApple);
     
        // 람다식 사용 [Apple{color='green', weight=80}, Apple{color='green', weight=155}]
        List<Apple>greenApple = filterApples(inventory,Apple->Apple.getColor().equals("green"));
        System.out.println(greenApple);
        // 람다식 사용[Apple{color='green', weight=155}]
        List<Apple>heavyApple = filterApples(inventory,Apple->Apple.getWeight()>150);
        System.out.println(heavyApple);       
        

        
        Predicate<Apple> redApple = apple -> apple.getColor().equals("red");
        Predicate<Apple> notRedApple = redApple.negate();
        System.out.println(filterApples(inventory, notRedApple));
        
    }



    public static List<Apple> filterApples(List<Apple> inventory, Predicate<Apple> p){
    	
    	List<Apple> res = new ArrayList<>();
    	for(Apple ap :inventory) {
    		if(p.test(ap)) {
    			res.add(ap);
    		}
    	}
        return res; 
    	
    }       

    public static boolean isGreenApple(Apple apple) {
        return apple.getColor().equals("green"); 
    }

    public static boolean isHeavyApple(Apple apple) {
        return apple.getWeight()>150;
    }
}
